--- node_modules/.pnpm/playwright-core@1.53.0/node_modules/playwright-core/lib/server/chromium/crPage.js.orig	2024-01-01 00:00:00.000000000 +0000
+++ node_modules/.pnpm/playwright-core@1.53.0/node_modules/playwright-core/lib/server/chromium/crPage.js	2024-01-01 00:00:00.000000000 +0000
@@ -117,7 +117,10 @@
     while (!this._sessions.has(frame._id)) {
       const parent = frame.parentFrame();
       if (!parent)
-        throw new Error(`Frame has been detached.`);
+        {
+          console.error('[FRAME-DETACHED-DEBUG] _sessionForFrame: Frame has no parent. Frame ID:', frame._id, 'Frame URL:', frame.url());
+          throw new Error(`Frame has been detached.`);
+        }
       frame = parent;
     }
     return this._sessions.get(frame._id);
@@ -292,7 +295,10 @@
   async getFrameElement(frame) {
     let parent = frame.parentFrame();
     if (!parent)
-      throw new Error("Frame has been detached.");
+      {
+        console.error('[FRAME-DETACHED-DEBUG] getFrameElement: Frame has no parent at start. Frame ID:', frame._id, 'Frame URL:', frame.url());
+        throw new Error("Frame has been detached.");
+      }
     const parentSession = this._sessionForFrame(parent);
     const { backendNodeId } = await parentSession._client.send("DOM.getFrameOwner", { frameId: frame._id }).catch((e) => {
       if (e instanceof Error && e.message.includes("Frame with the given id was not found."))
@@ -301,7 +307,10 @@
     });
     parent = frame.parentFrame();
     if (!parent)
-      throw new Error("Frame has been detached.");
+      {
+        console.error('[FRAME-DETACHED-DEBUG] getFrameElement: Frame has no parent after DOM.getFrameOwner. Frame ID:', frame._id, 'Frame URL:', frame.url());
+        throw new Error("Frame has been detached.");
+      }
     return parentSession._adoptBackendNodeId(backendNodeId, await parent._mainContext());
   }
   shouldToggleStyleSheetToSyncAnimations() {